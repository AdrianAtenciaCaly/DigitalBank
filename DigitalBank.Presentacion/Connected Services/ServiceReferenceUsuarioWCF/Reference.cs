//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReferenceUsuarioWCF
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Usuario", Namespace="http://schemas.datacontract.org/2004/07/ServicioWCF")]
    public partial class Usuario : object, System.ComponentModel.INotifyPropertyChanged
    {
        
        private System.DateTime FechaNacimientoField;
        
        private int IdField;
        
        private string NombreField;
        
        private string SexoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaNacimiento
        {
            get
            {
                return this.FechaNacimientoField;
            }
            set
            {
                if ((this.FechaNacimientoField.Equals(value) != true))
                {
                    this.FechaNacimientoField = value;
                    this.RaisePropertyChanged("FechaNacimiento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                if ((this.IdField.Equals(value) != true))
                {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre
        {
            get
            {
                return this.NombreField;
            }
            set
            {
                if ((object.ReferenceEquals(this.NombreField, value) != true))
                {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sexo
        {
            get
            {
                return this.SexoField;
            }
            set
            {
                if ((object.ReferenceEquals(this.SexoField, value) != true))
                {
                    this.SexoField = value;
                    this.RaisePropertyChanged("Sexo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceUsuarioWCF.IUsuarioServiceWCF")]
    public interface IUsuarioServiceWCF
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioServiceWCF/ObtenerUsuarios", ReplyAction="http://tempuri.org/IUsuarioServiceWCF/ObtenerUsuariosResponse")]
        ServiceReferenceUsuarioWCF.Usuario[] ObtenerUsuarios();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioServiceWCF/ObtenerUsuarios", ReplyAction="http://tempuri.org/IUsuarioServiceWCF/ObtenerUsuariosResponse")]
        System.Threading.Tasks.Task<ServiceReferenceUsuarioWCF.Usuario[]> ObtenerUsuariosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioServiceWCF/ObtenerUsuarioPorId", ReplyAction="http://tempuri.org/IUsuarioServiceWCF/ObtenerUsuarioPorIdResponse")]
        ServiceReferenceUsuarioWCF.Usuario ObtenerUsuarioPorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioServiceWCF/ObtenerUsuarioPorId", ReplyAction="http://tempuri.org/IUsuarioServiceWCF/ObtenerUsuarioPorIdResponse")]
        System.Threading.Tasks.Task<ServiceReferenceUsuarioWCF.Usuario> ObtenerUsuarioPorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioServiceWCF/CrearUsuario", ReplyAction="http://tempuri.org/IUsuarioServiceWCF/CrearUsuarioResponse")]
        bool CrearUsuario(ServiceReferenceUsuarioWCF.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioServiceWCF/CrearUsuario", ReplyAction="http://tempuri.org/IUsuarioServiceWCF/CrearUsuarioResponse")]
        System.Threading.Tasks.Task<bool> CrearUsuarioAsync(ServiceReferenceUsuarioWCF.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioServiceWCF/ActualizarUsuario", ReplyAction="http://tempuri.org/IUsuarioServiceWCF/ActualizarUsuarioResponse")]
        bool ActualizarUsuario(ServiceReferenceUsuarioWCF.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioServiceWCF/ActualizarUsuario", ReplyAction="http://tempuri.org/IUsuarioServiceWCF/ActualizarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> ActualizarUsuarioAsync(ServiceReferenceUsuarioWCF.Usuario usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioServiceWCF/EliminarUsuario", ReplyAction="http://tempuri.org/IUsuarioServiceWCF/EliminarUsuarioResponse")]
        bool EliminarUsuario(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsuarioServiceWCF/EliminarUsuario", ReplyAction="http://tempuri.org/IUsuarioServiceWCF/EliminarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> EliminarUsuarioAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface IUsuarioServiceWCFChannel : ServiceReferenceUsuarioWCF.IUsuarioServiceWCF, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class UsuarioServiceWCFClient : System.ServiceModel.ClientBase<ServiceReferenceUsuarioWCF.IUsuarioServiceWCF>, ServiceReferenceUsuarioWCF.IUsuarioServiceWCF
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public UsuarioServiceWCFClient() : 
                base(UsuarioServiceWCFClient.GetDefaultBinding(), UsuarioServiceWCFClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IUsuarioServiceWCF.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UsuarioServiceWCFClient(EndpointConfiguration endpointConfiguration) : 
                base(UsuarioServiceWCFClient.GetBindingForEndpoint(endpointConfiguration), UsuarioServiceWCFClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UsuarioServiceWCFClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(UsuarioServiceWCFClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UsuarioServiceWCFClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(UsuarioServiceWCFClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public UsuarioServiceWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public ServiceReferenceUsuarioWCF.Usuario[] ObtenerUsuarios()
        {
            return base.Channel.ObtenerUsuarios();
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceUsuarioWCF.Usuario[]> ObtenerUsuariosAsync()
        {
            return base.Channel.ObtenerUsuariosAsync();
        }
        
        public ServiceReferenceUsuarioWCF.Usuario ObtenerUsuarioPorId(int id)
        {
            return base.Channel.ObtenerUsuarioPorId(id);
        }
        
        public System.Threading.Tasks.Task<ServiceReferenceUsuarioWCF.Usuario> ObtenerUsuarioPorIdAsync(int id)
        {
            return base.Channel.ObtenerUsuarioPorIdAsync(id);
        }
        
        public bool CrearUsuario(ServiceReferenceUsuarioWCF.Usuario usuario)
        {
            return base.Channel.CrearUsuario(usuario);
        }
        
        public System.Threading.Tasks.Task<bool> CrearUsuarioAsync(ServiceReferenceUsuarioWCF.Usuario usuario)
        {
            return base.Channel.CrearUsuarioAsync(usuario);
        }
        
        public bool ActualizarUsuario(ServiceReferenceUsuarioWCF.Usuario usuario)
        {
            return base.Channel.ActualizarUsuario(usuario);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarUsuarioAsync(ServiceReferenceUsuarioWCF.Usuario usuario)
        {
            return base.Channel.ActualizarUsuarioAsync(usuario);
        }
        
        public bool EliminarUsuario(int id)
        {
            return base.Channel.EliminarUsuario(id);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarUsuarioAsync(int id)
        {
            return base.Channel.EliminarUsuarioAsync(id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IUsuarioServiceWCF))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IUsuarioServiceWCF))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:52315/UsuarioServiceWCF.svc");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return UsuarioServiceWCFClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IUsuarioServiceWCF);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return UsuarioServiceWCFClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IUsuarioServiceWCF);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IUsuarioServiceWCF,
        }
    }
}
